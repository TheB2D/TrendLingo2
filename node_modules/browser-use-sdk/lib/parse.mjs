import z from 'zod';
export function stringifyStructuredOutput(schema) {
    return JSON.stringify(z.toJSONSchema(schema));
}
export function parseStructuredTaskOutput(res, schema) {
    if (res.doneOutput == null) {
        return { ...res, parsedOutput: null };
    }
    try {
        const parsed = JSON.parse(res.doneOutput);
        const response = schema.safeParse(parsed);
        if (!response.success) {
            throw new Error(`Invalid structured output: ${response.error.message}`);
        }
        return { ...res, parsedOutput: response.data };
    }
    catch (e) {
        if (e instanceof SyntaxError) {
            return {
                ...res,
                parsedOutput: null,
            };
        }
        throw e;
    }
}
//# sourceMappingURL=parse.mjs.map