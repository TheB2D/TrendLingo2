import { useEffect, useState } from 'react';
/**
 * A hook to stream Browser Use updates to the client.
 */
export function useBrowserUse(route) {
    const [status, setStatus] = useState(null);
    useEffect(() => {
        const es = new EventSource(route);
        es.addEventListener('status', (e) => {
            if (e instanceof MessageEvent) {
                const msg = JSON.parse(e.data);
                setStatus(msg.data);
                if (msg.data.status === 'finished') {
                    es.close();
                }
            }
            else {
                console.error('Event is not a MessageEvent', e);
            }
        });
        es.addEventListener('end', () => es.close());
        es.addEventListener('error', () => es.close());
        return () => es.close();
    }, [route]);
    return status;
}
//# sourceMappingURL=useBrowserUse.mjs.map