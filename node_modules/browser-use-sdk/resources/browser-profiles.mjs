// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../core/resource.mjs";
import { buildHeaders } from "../internal/headers.mjs";
import { path } from "../internal/utils/path.mjs";
export class BrowserProfiles extends APIResource {
    /**
     * Create a new browser profile for the authenticated user.
     *
     * Browser profiles define how your web browsers behave during AI agent tasks. You
     * can create multiple profiles for different use cases (e.g., mobile testing,
     * desktop browsing, proxy-enabled scraping). Free users can create up to 10
     * profiles; paid users can create unlimited profiles.
     *
     * Key features you can configure:
     *
     * - Viewport dimensions: Set the browser window size for consistent rendering
     * - Mobile emulation: Enable mobile device simulation
     * - Proxy settings: Route traffic through specific locations or proxy servers
     * - Ad blocking: Enable/disable ad blocking for cleaner browsing
     * - Cache persistence: Choose whether to save browser data between sessions
     *
     * Args:
     *
     * - request: The browser profile configuration including name, description, and
     *   browser settings
     *
     * Returns:
     *
     * - The newly created browser profile with all its details
     *
     * Raises:
     *
     * - 402: If user needs a subscription to create additional profiles
     */
    create(body, options) {
        return this._client.post('/browser-profiles', { body, ...options });
    }
    /**
     * Get a specific browser profile by its ID.
     *
     * Retrieves the complete details of a browser profile, including all its
     * configuration settings like viewport dimensions, proxy settings, and behavior
     * flags.
     *
     * Args:
     *
     * - profile_id: The unique identifier of the browser profile
     *
     * Returns:
     *
     * - Complete browser profile information
     *
     * Raises:
     *
     * - 404: If the user browser profile doesn't exist
     */
    retrieve(profileID, options) {
        return this._client.get(path `/browser-profiles/${profileID}`, options);
    }
    /**
     * Update an existing browser profile.
     *
     * Modify any aspect of a browser profile, such as its name, description, viewport
     * settings, or proxy configuration. Only the fields you provide will be updated;
     * other fields remain unchanged.
     *
     * Args:
     *
     * - profile_id: The unique identifier of the browser profile to update
     * - request: The fields to update (only provided fields will be changed)
     *
     * Returns:
     *
     * - The updated browser profile with all its current details
     *
     * Raises:
     *
     * - 404: If the user browser profile doesn't exist
     */
    update(profileID, body, options) {
        return this._client.patch(path `/browser-profiles/${profileID}`, { body, ...options });
    }
    /**
     * Get a paginated list of all browser profiles for the authenticated user.
     *
     * Browser profiles define how your web browsers behave during AI agent tasks,
     * including settings like viewport size, mobile emulation, proxy configuration,
     * and ad blocking. Use this endpoint to see all your configured browser profiles.
     *
     * Returns:
     *
     * - A paginated list of browser profiles
     * - Total count of profiles
     * - Page information for navigation
     */
    list(query = {}, options) {
        return this._client.get('/browser-profiles', { query, ...options });
    }
    /**
     * Delete a browser profile.
     *
     * Permanently removes a browser profile and all its configuration. This action
     * cannot be undone. The profile will also be removed from the browser service. Any
     * active sessions using this profile will continue to work, but you won't be able
     * to create new sessions with the deleted profile.
     *
     * Args:
     *
     * - profile_id: The unique identifier of the browser profile to delete
     *
     * Returns:
     *
     * - 204 No Content on successful deletion (idempotent)
     */
    delete(profileID, options) {
        return this._client.delete(path `/browser-profiles/${profileID}`, {
            ...options,
            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),
        });
    }
}
//# sourceMappingURL=browser-profiles.mjs.map